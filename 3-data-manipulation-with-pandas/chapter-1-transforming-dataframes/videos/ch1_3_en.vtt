WEBVTT

1
00:00:00.000 --> 00:00:07.560
In the last lesson, you saw how to subset and sort a DataFrame to extract interesting bits.

2
00:00:07.560 --> 00:00:13.800
However, often when you first receive a DataFrame, the contents aren't exactly what you want.

3
00:00:13.800 --> 00:00:18.200
You may have to add new columns derived from existing columns.

4
00:00:18.200 --> 00:00:18.200


5
00:00:18.200 --> 00:00:18.200


6
00:00:18.200 --> 00:00:22.440
Creating and adding new columns can go by many names, including

7
00:00:22.440 --> 00:00:29.560
mutating a DataFrame, transforming a DataFrame, and feature engineering.

8
00:00:29.560 --> 00:00:29.600


9
00:00:29.600 --> 00:00:29.600


10
00:00:29.600 --> 00:00:37.080
Let's say we want to add a new column to our DataFrame that has each dog's height in meters instead of centimeters.

11
00:00:37.080 --> 00:00:37.200


12
00:00:37.200 --> 00:00:37.200


13
00:00:37.200 --> 00:00:43.880
On the left-hand side of the equals, we use square brackets with the name of the new column we want to create.

14
00:00:43.880 --> 00:00:47.640
On the right-hand side, we have the calculation.

15
00:00:47.640 --> 00:00:54.360
Notice that both the existing column and the new column we just created are in the DataFrame.

16
00:00:54.360 --> 00:00:54.360


17
00:00:54.360 --> 00:00:54.360


18
00:00:54.360 --> 00:01:01.080
Let's see what the results are if we calculate the body mass index, or BMI, of these dogs.

19
00:01:01.080 --> 00:01:08.360
BMI is usually calculated by taking a person's weight in kilograms and dividing it by their height in meters, squared.

20
00:01:08.360 --> 00:01:08.360


21
00:01:08.360 --> 00:01:09.600


22
00:01:09.600 --> 00:01:13.920
Instead of doing this with people, we'll try it out with dogs.

23
00:01:13.920 --> 00:01:20.880
Again, the new column is on the left-hand side of the equals, but this time, our calculation involves two columns.

24
00:01:20.880 --> 00:01:20.880


25
00:01:20.880 --> 00:01:22.120


26
00:01:22.120 --> 00:01:28.160
The real power of pandas comes in when you combine all the skills you've learned so far.

27
00:01:28.160 --> 00:01:31.160
Let's figure out the names of skinny, tall dogs.

28
00:01:31.160 --> 00:01:31.160


29
00:01:31.160 --> 00:01:32.280


30
00:01:32.280 --> 00:01:40.120
First, to define the skinny dogs, we take the subset of the dogs who have a BMI of under 100.

31
00:01:40.120 --> 00:01:40.120


32
00:01:40.120 --> 00:01:40.120


33
00:01:40.120 --> 00:01:46.960
Next, we sort the result in descending order of height to get the tallest skinny dogs at the top.

34
00:01:46.960 --> 00:01:46.960


35
00:01:46.960 --> 00:01:46.960


36
00:01:46.960 --> 00:01:50.920
Finally, we keep only the columns we're interested in.

37
00:01:50.920 --> 00:01:55.640
Here, you can see that Max is the tallest dog with a BMI of under 100.

38
00:01:55.640 --> 00:01:55.640


39
00:01:55.640 --> 00:01:55.640


40
00:01:55.640 --> 00:02:01.120
Time to practice your pandas powers!

