WEBVTT

1
00:00:00.000 --> 00:00:09.160
Wow, now you've got histograms under your datavis belt, let's figure out how to customize our plots.

2
00:00:09.160 --> 00:00:11.360
Creating a plot is one thing.

3
00:00:11.360 --> 00:00:16.640
Making the correct plot, that makes the message very clear -- that's the real challenge.

4
00:00:16.640 --> 00:00:17.160


5
00:00:17.160 --> 00:00:17.160


6
00:00:17.160 --> 00:00:20.720
For each visualization, you have many options.

7
00:00:20.720 --> 00:00:23.720
First of all, there are the different plot types.

8
00:00:23.720 --> 00:00:28.080
And for each plot, you can do an infinite number of customizations.

9
00:00:28.080 --> 00:00:32.280
You can change colors, shapes, labels, axes, and so on.

10
00:00:32.280 --> 00:00:40.880
The choice depends on: one, the data, and two, the story you want to tell with this data.

11
00:00:40.880 --> 00:00:46.000
Since there are so many possible customizations, the best way to learn this is by example.

12
00:00:46.000 --> 00:00:46.840


13
00:00:46.840 --> 00:00:46.840


14
00:00:46.840 --> 00:00:51.760
Let's start with the code in this script to build a simple line plot.

15
00:00:51.760 --> 00:00:57.400
It's similar to the line plot we've created in the first video, but this time the year and pop

16
00:00:57.400 --> 00:01:05.400
lists contain more data, including projections until the year 2100, forecasted by the United Nations.

17
00:01:05.400 --> 00:01:05.400


18
00:01:05.400 --> 00:01:05.400


19
00:01:05.400 --> 00:01:10.880
If we run this script, we already get a pretty nice plot: it shows that the

20
00:01:10.880 --> 00:01:15.480
population explosion that's going on will have slowed down by the end of the century.

21
00:01:15.480 --> 00:01:18.280
But some things can be improved.

22
00:01:18.280 --> 00:01:22.520
First, it should be clearer which data we are displaying,

23
00:01:22.520 --> 00:01:27.080
especially to people who are seeing the graph for the first time.

24
00:01:27.080 --> 00:01:32.280
And second, the plot really needs to draw the attention to the population explosion.

25
00:01:32.280 --> 00:01:32.280


26
00:01:32.280 --> 00:01:33.960


27
00:01:33.960 --> 00:01:38.520
The first thing you always need to do is label your axes.

28
00:01:38.520 --> 00:01:42.880
Let's do this by adding the xlabel and ylabel functions.

29
00:01:42.880 --> 00:01:48.240
As inputs, we pass strings that should be placed alongside the axes.

30
00:01:48.240 --> 00:01:51.640
Make sure to call these functions before calling the show

31
00:01:51.640 --> 00:01:57.080
function, otherwise your customizations will not be displayed.

32
00:01:57.080 --> 00:01:58.720
If we run the script again,

33
00:01:58.720 --> 00:01:58.720


34
00:01:58.720 --> 00:02:01.400
this time the axes are annotated.

35
00:02:01.400 --> 00:02:02.480
Fantastic!

36
00:02:02.480 --> 00:02:03.520


37
00:02:03.520 --> 00:02:03.520


38
00:02:03.520 --> 00:02:08.560
We're also going to add a title to our plot, with the title function.

39
00:02:08.560 --> 00:02:13.840
We pass the actual title, 'World Population Projections', as an argument.

40
00:02:13.840 --> 00:02:13.840


41
00:02:13.840 --> 00:02:13.840


42
00:02:13.840 --> 00:02:14.920
And there's the title!

43
00:02:14.920 --> 00:02:21.560
So, using xlabel, ylabel and title, we can give the reader more information

44
00:02:21.560 --> 00:02:26.720
about the data on the plot: now they can at least tell what the plot is about.

45
00:02:26.720 --> 00:02:26.720


46
00:02:26.720 --> 00:02:26.720


47
00:02:26.720 --> 00:02:34.400
To put the population growth in perspective, I want to have the y-axis start from zero.

48
00:02:34.400 --> 00:02:34.400


49
00:02:34.400 --> 00:02:34.400


50
00:02:34.400 --> 00:02:37.360
You can do this with the yticks function.

51
00:02:37.360 --> 00:02:44.120
The first input is a list, in this example with the numbers zero up to ten, with intervals of 2.

52
00:02:44.120 --> 00:02:44.120


53
00:02:44.120 --> 00:02:44.120


54
00:02:44.120 --> 00:02:48.800
If we run this, the plot will change: the curve shifts up.

55
00:02:48.800 --> 00:02:53.480
Now it's clear that already in 1950, there were already about 2.

56
00:02:53.480 --> 00:02:55.000
5 billion people on this planet.

57
00:02:55.000 --> 00:02:55.960


58
00:02:55.960 --> 00:02:55.960


59
00:02:55.960 --> 00:03:00.520
Next, to make it clear we're talking about billions, we can add a second

60
00:03:00.520 --> 00:03:06.080
argument to the yticks function, which is a list with the display names of the ticks.

61
00:03:06.080 --> 00:03:09.800
This list should have the same length as the first list.

62
00:03:09.800 --> 00:03:18.520
The tick 0 gets the name 0, the tick 2 gets the name 2B, the tick 4 gets the name 4B and so on.

63
00:03:18.520 --> 00:03:22.800
By the way, B stands for Billions here.

64
00:03:22.800 --> 00:03:24.760
If we run this version of the script,

65
00:03:24.760 --> 00:03:24.760


66
00:03:24.760 --> 00:03:27.680
the labels will change accordingly.

67
00:03:27.680 --> 00:03:28.280
Awesome!

68
00:03:28.280 --> 00:03:28.280


69
00:03:28.280 --> 00:03:29.320


70
00:03:29.320 --> 00:03:36.720
Finally, let's add some more historical data to accentuate the population explosion in the last 60 years.

71
00:03:36.720 --> 00:03:43.680
On wikipedia, I found the world population data for the years 1800, 1850 and 1900.

72
00:03:43.680 --> 00:03:49.680
I can write them in list form and append them to the pop and year lists with the plus sign.

73
00:03:49.680 --> 00:03:52.160
If I now run the script once more,

74
00:03:52.160 --> 00:03:52.160


75
00:03:52.160 --> 00:03:57.000
three data points are added to the graph, giving a more complete picture.

76
00:03:57.000 --> 00:03:57.000


77
00:03:57.000 --> 00:03:57.960


78
00:03:57.960 --> 00:04:04.320
Now that's how you turn an average line plot into a visual that has a clear story to tell!

79
00:04:04.320 --> 00:04:05.360
Over to you now.

80
00:04:05.360 --> 00:04:05.360


81
00:04:05.360 --> 00:04:05.840


82
00:04:05.840 --> 00:04:15.480
Head over to the exercises, gradually customize the world development chart and become the next Hans Rosling!

